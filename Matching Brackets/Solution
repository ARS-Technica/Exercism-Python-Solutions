# https://exercism.org/tracks/python/exercises/matching-brackets/solutions/ARS-Technica


def is_paired(input_string):
    brackets = { ")":"(", "]":"[", "}":"{" }
    stack = []

    for char in input_string:
        if char in brackets.values():
            stack.append(char)
        elif stack and brackets[char] == stack[-1]:
            stack.pop()
        else:
            return False

    return stack == []


if __name__ == '__main__':
    print(is_paired('()'))        #true
    print(is_paired('()[]{}'))    #true
    print(is_paired('(]'))        #false
    print(is_paired('([)]'))      #false
    print(is_paired('{[]}'))      #true
    print(is_paired('([])'))      #true

# Does not work if there are spaces in the input string.

#%%


def is_paired(input_string):
    brackets = { ")":"(", "]":"[", "}":"{" }
    stack = []

    for char in input_string:
        if char in brackets.values():
            stack.append(char)

        if char in brackets.keys():
            if stack and brackets[char] == stack[-1]:
                stack.pop()
            else:
                return False

    return stack == []


if __name__ == '__main__':
    print(is_paired('()'))        #true
    print(is_paired('()[]{}'))    #true
    print(is_paired('(]'))        #false
    print(is_paired('([)]'))      #false
    print(is_paired('{[]}'))      #true
    print(is_paired('([])'))      #true

# Works

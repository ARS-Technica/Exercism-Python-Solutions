# https://exercism.org/tracks/python/exercises/roman-numerals/solutions/daros21

def roman(number: int) -> str:
    roman = {
        0: ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"],
        1: ["", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"],
        2: ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"],
        3: ["", "M", "MM", "MMM"]
    }
    
    return "".join(reversed([roman[idx][int(n)]
                             for idx, n in enumerate(list(reversed(str(number))))]))

#%%

# https://exercism.org/tracks/python/exercises/roman-numerals/solutions/brq12

def roman(number):
    diction = {
        'ones': ['', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'],
        'tens': ['', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC'],
        'hundreds': ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM'],
        'thousends': ['', 'M', 'MM', 'MMM']
    }
    
    answer = ''

    for key in diction:
        number, remainder  = divmod(number, 10)
        answer = diction.get(key)[remainder] + answer

    return answer

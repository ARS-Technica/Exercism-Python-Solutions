# Naive solution.  Nothing but loops and conditionals. Veeery long.


def translate(text):
    sentence = [list(word) for word in text.split()]

    consonant_clusters = ['sm', 'sn', 'st', 'sw', 'sk', 'sl', 'sp', 'sf', 'th',
                          'dw', 'tw', 'dr', 'tr', 'kw', 'kr', 'kl', 'pr', 'fr',
                          'br', 'gr', 'pl', 'fl', 'bl', 'gl', 'sh', 'ch', 'qu',
                          'sh', 'sc', 'rh',]   

    vowel_sounds = ['a', 'e', 'i', 'o', 'u']


    for word in sentence: 
        if word[0] in vowel_sounds:
            word.append('ay')

        if len(word) == 2:
            if word[1] == 'y':
                word.append(word.pop(0))
                word.append('ay') 
                    
        elif word[0] not in vowel_sounds:
            if word[0] == 'x':
                if word[1] == 'r':
                    word.append('ay')
                else:
                    word.append(word.pop(0))
                    word.append('ay')
            elif word[0] == 'y':
                if word[1] == 't':
                    word.append('ay')
                else:
                    word.append(word.pop(0))
                    word.append('ay')
            
            else:
                if word[0] + word[1] in consonant_clusters:
                    if word[0] == 's' and word[1] == 'c':
                        if word[2] == 'h':
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay') 
                        else:
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')                             
                    elif word[0] == 's' and word[1] == 'h':
                        if word[2] == 'r':
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay') 
                        else:
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')  
                    elif word[0] == 't' and word[1] == 'h':
                        if word[2] == 'r':
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')      
                        else:
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')  
                    elif word[0] == 't' and word[1] == 'h':
                        if word[2] == 'w':
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')   
                        else:
                            word.append(word.pop(0))
                            word.append(word.pop(0))
                            word.append('ay')  
                    else:
                        word.append(word.pop(0))
                        word.append(word.pop(0))
                        word.append('ay')
                else:
                    if word[1] == 'q' and word[2] == 'u':
                        word.append(word.pop(0))
                        word.append(word.pop(0))
                        word.append(word.pop(0))
                        word.append('ay')                        
                    else:
                        word.append(word.pop(0))
                        word.append('ay')

    return ' '.join([''.join(word) for word in sentence])
    

if __name__ == "__main__":
    print(translate("rhythm"))                                                      # "ythmrhay"
    print(translate("school"))                                                      # "oolschay"
    print(translate("my"))                                                          # "ymay"
    print(translate("therapy"))                                                     # "erapythay"
    print(translate("thrush"))                                                      # "ushthray"
    print(translate("school"))                                                      # "oolschay" 
    print(translate("apple"))                                                       # "appleay"
    print(translate("ear"))                                                         # "earay"
    print(translate("igloo"))                                                       # "iglooay"
    print(translate("object"))                                                      # "objectay"
    print(translate("pig"))                                                         # "igpay"
    print(translate("koala"))                                                       # "oalakay"
    print(translate("square"))                                                      # "aresquay"
    print(translate("therapy"))                                                     # "erapythay"
    print(translate("quick fast run"))                                              # "ickquay astfay unray"


#%%

# Refactored.  Shorter.  Slightly better.


def transform(word, count):
    for _ in range(count):
        word.append(word.pop(0))
    word.append('a')
    word.append('y')
    return word


def translate(text):
    consonant_clusters = ['sm', 'sn', 'st', 'sw', 'sk', 'sl', 'sp', 'sf', 'th',
                          'dw', 'tw', 'dr', 'tr', 'kw', 'kr', 'kl', 'pr', 'fr',
                          'br', 'gr', 'pl', 'fl', 'bl', 'gl', 'sh', 'ch', 'qu',
                          'sh', 'sc', 'rh', 'sch', 'shr', 'thr', 'thw',]

    vowel_sounds = ['a', 'e', 'i', 'o', 'u']

    result = []
    sentence = [list(word) for word in text.split()]

    for word in sentence: 
        if word[0] in vowel_sounds: result.append(transform(word, 0))
        if len(word) == 2 and word[1] == 'y': result.append(transform(word, 1))

        elif word[0] not in vowel_sounds:
            three = word[0] + word[1] + word[2]
            two = word[0] + word[1]           

            if three in consonant_clusters: result.append(transform(word, 3))
            elif two == 'xr' or two == 'yt': result.append(transform(word, 0))
            elif two in consonant_clusters: result.append(transform(word, 2))
            elif word[1] + word[2] == 'qu': result.append(transform(word, 3))
            else: result.append(transform(word, 1))

    return ' '.join([''.join(word) for word in result]).strip()

